---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: redeploy-rhacm
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: acm,rhacm
    tekton.dev/displayName: "redeploy-rhacm"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    The redeploy-rhacm pipeline redeploys RHACM running on a cluster.
  workspaces:
    - name: shared-workspace
    - name: source
      description: Location where source is stored.
    - name: cache
      description: Location where cache is stored if CACHE_IMAGE is not provided.
      optional: true

  params:
    - name: SOURCE_URL
      default: "https://github.com/stolostron/deploy.git"
      description: A git repo url where the source code resides.
    - name: SOURCE_REFERENCE
      description: The branch, tag or SHA to checkout.
      default: ""
    - name: API_ENDPOINT
      description: k8s endpoint url
      default: ""
    - name: GITOPS_SECRET_NAME
      default: "gitops-encoded"
      description: Secret in the namespace with credentials encoded.
  tasks:
    - name: fetch-from-git
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.SOURCE_URL)
        - name: revision
          value: $(params.SOURCE_REFERENCE)
      workspaces:
        - name: output
          workspace: source
    - name: uninstall-rhacm
      runAfter: 
      - "fetch-from-git"
      taskRef: 
        name: openshift-client
      params:
        - name: SCRIPT
          value: |
            _TOKEN_RAW=$(oc get secret $(params.gitopssecretname) -ojsonpath='{.data.ocpTokenEncoded}' | base64 --decode | base64 --decode)
            export KUBECONFIG=/tmp/local-kubeconfig

            oc login --token=$_TOKEN_RAW --server=$(params.API_ENDPOINT) --insecure-skip-tls-verify=true
            oc cluster-info
            oc project open-cluster-management
            oc get pods
            oc delete mco observability || true

            echo "----------- Clean up IDP -----------------"
            oc delete managedclustersetbinding sso-clusterset -n sso-ns || true
            oc delete placement sso-placement -n sso-ns || true
            oc delete managedclusterset sso-clusterset -n sso-ns || true

            echo "----------- Run ./uninstall.sh -----------"
            ./uninstall.sh -k

            sleep 20
            echo "----------- Check terminating namespaces -"
            NS_LIST=$(oc get ns | grep Terminating | awk '{print $1}')
            for i in $NS_LIST
            do
              echo $i
              oc patch managedclusteraddons.addon.open-cluster-management.io application-manager -n $i -p '{"metadata":{"finalizers":[]}}' --type=merge
            done
            oc delete clusterrole open-cluster-management:addons:search-collector
    - name: reinstall-rhacm
      runAfter: uninstall-rhacm
      taskRef:
        name: rhacm-deploy-repo-install
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
